{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","backgroundImage","image","backgroundColor","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","landingPage","lg","md","xs","href","movieId","src","alt","movieName","characterName","LandingPage","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","endpoint","fetchMovies","fetch","json","console","log","results","page","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","MovieInfo","bordered","release_date","revenue","runtime","Vote_average","vote_count","popularity","Favorite","userFrom","movieTitle","movieInfo","moviePost","movieRunTime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variables","Axios","favoriteNumber","MovieDetail","match","params","Movie","setMovie","Casts","setCasts","ActorToggle","setActorToggle","endpointCrews","endpointInfo","cast","profile_path","CharacterName","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","renderCards","favorite","content","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+oEAGaA,EAAU,gCACVC,EAAU,mCACVC,EAAiB,6BCwBvB,SAASC,IAIZ,MAAO,CACHC,KChCiB,YDiCjBC,QALYC,IAAMC,IAAN,UD7BO,aC6BP,UACfC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,YE1BhB,WAAUC,EAAmBC,GAA4B,IAApBC,EAAmB,uDAAN,KAC7D,SAASC,EAAoBC,GAEzB,IAAIC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAChCG,EAAWC,cA2BjB,OAzBAC,qBAAU,WAENF,EAAShB,KAAQK,MAAK,SAAAC,GAEbA,EAASJ,QAAQiB,QAOdT,IAAeJ,EAASJ,QAAQkB,UAKjB,IAAXX,IAJJG,EAAMS,QAAQC,KAAK,KAPnBb,GACAG,EAAMS,QAAQC,KAAK,eAiBhC,IAGC,kBAACd,EAAD,iBAAuBI,EAAvB,CAA8BC,KAAMA,KAG5C,OAAOF,G,iBCbIY,MAzBf,SAAmBX,GAGf,OACA,yBAAKY,MAAO,CACRC,gBAAgB,GAAD,OAJF,0FAIE,kBAAuBb,EAAMc,MAA7B,MACfC,gBAAiB,UACjBC,OAAQ,QACRC,eAAgB,cAChBC,mBAAoB,cACpBC,MAAO,OACPC,SAAU,aAEV,6BACI,yBAAKR,MAAO,CAAEQ,SAAU,WAAYC,SAAU,QAASC,OAAQ,OAAQC,WAAY,SAC/E,wBAAIX,MAAO,CAAEY,MAAO,UAApB,IAAiCxB,EAAMyB,MAAvC,KACA,uBAAGb,MAAO,CAAEY,MAAO,QAASE,SAAU,SAAtC,IAAiD1B,EAAM2B,KAAvD,S,SCSDC,MAxBf,SAAmB5B,GAEf,OAAIA,EAAM6B,YAEF,kBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnB,yBAAKpB,MAAO,CAAEQ,SAAU,aACpB,uBAAGa,KAAI,iBAAYjC,EAAMkC,UACrB,yBAAKtB,MAAO,CAAEO,MAAM,OAAQH,OAAO,SAAWmB,IAAKnC,EAAMc,MAAOsB,IAAKpC,EAAMqC,eAOvF,kBAAC,IAAD,CAAKP,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACnB,yBAAKpB,MAAO,CAAEQ,SAAU,aACpB,yBAAKR,MAAO,CAAEO,MAAM,OAAQH,OAAO,SAAWmB,IAAKnC,EAAMc,MAAOsB,IAAKpC,EAAMsC,mB,SCwEhFC,MAnFf,WAAwB,IAAD,EAGSC,mBAAS,IAHlB,mBAGZC,EAHY,KAGJC,EAHI,OAIyBF,mBAAS,MAJlC,mBAIZG,EAJY,KAIIC,EAJJ,OAKmBJ,mBAAS,GAL5B,mBAKZK,EALY,KAKCC,EALD,KAOnBxC,qBAAU,WACF,IAAMyC,EAAQ,UAAM9D,EAAN,iCAAsCC,EAAtC,0BACd8D,EAAYD,KACjB,IAEH,IAAMC,EAAc,SAACD,GACjBE,MAAMF,GACLtD,MAAK,SAAAC,GAAQ,OAAIA,EAASwD,UAC1BzD,MAAK,SAAAC,GACFyD,QAAQC,IAAI1D,GACZgD,EAAU,GAAD,mBAAKD,GAAL,YAAgB/C,EAAS2D,WAClCT,EAAkBlD,EAAS2D,QAAQ,IACnCP,EAAepD,EAAS4D,UAWhC,OACI,yBAAK1C,MAAO,CAAEO,MAAO,OAAQoC,OAAO,MAG/BZ,GACG,kBAAC,EAAD,CACI7B,MAAK,UAAK3B,EAAL,gBAA2BwD,EAAea,eAC/C/B,MAAOkB,EAAec,eACtB9B,KAAMgB,EAAee,WAI7B,yBAAK9C,MAAO,CAAEO,MAAM,MAAOoC,OAAO,cAE9B,gDACA,6BAGA,kBAAC,IAAD,CAAKI,OAAQ,CAAC,GAAI,KAEblB,GAAUA,EAAOmB,KAAI,SAACC,EAAOC,GAAR,OAClB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACjB,kBAAC,EAAD,CACIjC,aAAW,EACXf,MAAO+C,EAAMI,YAAN,UACA9E,EADA,eACqB0E,EAAMI,aAAgB,KAClD/B,QAAS2B,EAAMK,GACf7B,UAAWwB,EAAMJ,uBAkBzC,yBAAK7C,MAAO,CAAEuD,QAAS,OAAQC,eAAe,WAC1C,4BAAQC,QArDM,WAClB,IAAMtB,EAAQ,UAAM9D,EAAN,iCAAsCC,EAAtC,gCAAqE2D,EAAc,GACjGG,EAAYD,KAmDR,gB,sEC5EJuB,EAAUC,IAAVD,MA0IOE,mBAxIf,SAAmBxE,GACjB,IAAMI,EAAWC,cACXoE,IAAoBC,aAAaC,QAAQ,cAFvB,EAIwBnC,mBAAS,IAJjC,mBAIjBoC,EAJiB,KAICC,EAJD,OAKYrC,mBAASiC,GALrB,mBAKjBK,EALiB,KAKLC,EALK,KAOlBC,EAAmB,WACvBD,GAAeD,IAGXG,EAAeP,aAAaC,QAAQ,cAAgBD,aAAaC,QAAQ,cAAgB,GAE/F,OACE,kBAAC,IAAD,CACEO,cAAe,CACbC,MAAOF,EACPG,SAAU,IAEZC,iBAAkBC,WAAaC,MAAM,CACnCJ,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,0BAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACT,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,UAGnBhF,ENzBH,SAAmB0F,GAItB,MAAO,CACHzG,KCxBkB,aDyBlBC,QALYC,IAAMwG,KAAN,UDnBO,aCmBP,UAAkCD,GACrCrG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SMuBxBqG,CAAUF,IAChBrG,MAAK,SAAAC,GACAA,EAASJ,QAAQ2G,cACnBC,OAAOxB,aAAayB,QAAQ,SAAUzG,EAASJ,QAAQ8G,SACpC,IAAftB,EACFoB,OAAOxB,aAAayB,QAAQ,aAAcR,EAAOzB,IAEjDQ,aAAa2B,WAAW,cAE1BrG,EAAMS,QAAQC,KAAK,MAEnBmE,EAAoB,+CAGvByB,OAAM,SAAAC,GACL1B,EAAoB,4CACpBgB,YAAW,WACThB,EAAoB,MACnB,QAEPe,GAAc,KACb,QAGJ,SAAA5F,GAAU,IAEP2F,EASE3F,EATF2F,OACAa,EAQExG,EARFwG,QACAC,EAOEzG,EAPFyG,OAEAC,EAKE1G,EALF0G,aACAC,EAIE3G,EAJF2G,aACAC,EAGE5G,EAHF4G,WACAC,EAEE7G,EAFF6G,aAGF,OACE,yBAAKC,UAAU,OAEb,kBAACxC,EAAD,CAAOyC,MAAO,GAAd,UACA,0BAAMrB,SAAUmB,EAAcjG,MAAO,CAAEO,MAAO,UAE5C,kBAAC,IAAK6F,KAAN,CAAWxB,UAAQ,GACjB,kBAAC,IAAD,CACEtB,GAAG,QACH+C,OAAQ,kBAAC,IAAD,CAAM5H,KAAK,OAAOuB,MAAO,CAAEY,MAAO,qBAC1C0F,YAAY,mBACZ7H,KAAK,QACL8H,MAAOxB,EAAOR,MACdiC,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK2B,UAAU,kBAAkBL,EAAOtB,QAI5C,kBAAC,IAAK6B,KAAN,CAAWxB,UAAQ,GACjB,kBAAC,IAAD,CACEtB,GAAG,WACH+C,OAAQ,kBAAC,IAAD,CAAM5H,KAAK,OAAOuB,MAAO,CAAEY,MAAO,qBAC1C0F,YAAY,sBACZ7H,KAAK,WACL8H,MAAOxB,EAAOP,SACdgC,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK0B,UAAU,kBAAkBL,EAAOrB,WAI3CR,GACC,+BAAQ,uBAAGhE,MAAO,CAAEY,MAAO,YAAaE,SAAU,SAAU4F,OAAQ,YAAaC,QAAS,OAAQC,aAAc,SAAW5C,IAG7H,kBAAC,IAAKoC,KAAN,KACE,kBAAC,IAAD,CAAU9C,GAAG,aAAakD,SAAUpC,EAAkByC,QAAS3C,GAA/D,eACA,uBAAGgC,UAAU,oBAAoB7E,KAAK,cAAcrB,MAAO,CAAE8G,MAAO,UAApE,mBAGA,6BACE,kBAAC,IAAD,CAAQrI,KAAK,UAAUsI,SAAS,SAASb,UAAU,oBAAoBlG,MAAO,CAAEgH,SAAU,QAAUC,SAAUnB,EAAchB,SAAUmB,GAAtI,WANJ,MAUK,uBAAG5E,KAAK,aAAR,0B,kBC3Hb6F,EAAiB,CACrBC,SAAU,CACR/F,GAAI,CAAEgG,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVlG,GAAI,CAAEgG,KAAM,IACZC,GAAI,CAAED,KAAM,MAGVG,EAAqB,CACzBD,WAAY,CACVlG,GAAI,CACFgG,KAAM,GACNI,OAAQ,GAEVH,GAAI,CACFD,KAAM,GACNI,OAAQ,KA2KCC,MAtKf,SAAsBrI,GACpB,IAAMI,EAAWC,cACjB,OAEE,kBAAC,IAAD,CACE6E,cAAe,CACbC,MAAO,GACPmD,SAAU,GACVC,KAAM,GACNnD,SAAU,GACVoD,gBAAiB,IAEnBnD,iBAAkBC,WAAaC,MAAM,CACnCgD,KAAMjD,WACHE,SAAS,oBACZ8C,SAAUhD,WACPE,SAAS,yBACZL,MAAOG,WACJH,MAAM,oBACNK,SAAS,qBACZJ,SAAUE,WACPG,IAAI,EAAG,0CACPD,SAAS,wBACZgD,gBAAiBlD,WACdmD,MAAM,CAACnD,MAAQ,YAAa,MAAO,wBACnCE,SAAS,kCAEdE,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WAET,IAAIC,EAAe,CACjBX,MAAOQ,EAAOR,MACdC,SAAUO,EAAOP,SACjBmD,KAAM5C,EAAO4C,KACbG,SAAU/C,EAAO+C,SACjB5H,MAAM,8BAAD,OAAgC6H,MAASC,OAAzC,iBAGPxI,EPjEH,SAAsB0F,GAIzB,MAAO,CACHzG,KCbqB,gBDcrBC,QALYC,IAAMwG,KAAN,UDTO,aCSP,aAAqCD,GAChDrG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SO+DhBkJ,CAAa/C,IAAerG,MAAK,SAAAC,GACpCA,EAASJ,QAAQwJ,QACnB9I,EAAMS,QAAQC,KAAK,UAEnBqI,MAAMrJ,EAASJ,QAAQiH,IAAIyC,WAI/BpD,GAAc,KACb,QAGJ,SAAA5F,GAAU,IAEP2F,EASE3F,EATF2F,OACAa,EAQExG,EARFwG,QACAC,EAOEzG,EAPFyG,OAEAC,EAKE1G,EALF0G,aACAC,EAIE3G,EAJF2G,aACAC,EAGE5G,EAHF4G,WACAC,EAEE7G,EAFF6G,aAGF,OACE,yBAAKC,UAAU,OACb,uCACA,kBAAC,IAAD,eAAMlG,MAAO,CAAEgH,SAAU,UAAeE,EAAxC,CAAwDpC,SAAUmB,IAEhE,kBAAC,IAAKG,KAAN,CAAWxB,UAAQ,EAACyD,MAAM,QACxB,kBAAC,IAAD,CACE/E,GAAG,OACHgD,YAAY,kBACZ7H,KAAK,OACL8H,MAAOxB,EAAO4C,KACdnB,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAO8B,MAAQ/B,EAAQ+B,KAAO,mBAAqB,eAGtD9B,EAAO8B,MAAQ/B,EAAQ+B,MACtB,yBAAKzB,UAAU,kBAAkBL,EAAO8B,OAI5C,kBAAC,IAAKvB,KAAN,CAAWxB,UAAQ,EAACyD,MAAM,aACxB,kBAAC,IAAD,CACE/E,GAAG,WACHgD,YAAY,uBACZ7H,KAAK,OACL8H,MAAOxB,EAAO2C,SACdlB,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAO6B,UAAY9B,EAAQ8B,SAAW,mBAAqB,eAG9D7B,EAAO6B,UAAY9B,EAAQ8B,UAC1B,yBAAKxB,UAAU,kBAAkBL,EAAO6B,WAI5C,kBAAC,IAAKtB,KAAN,CAAWxB,UAAQ,EAACyD,MAAM,QAAQC,aAAW,EAACC,eAAgB1C,EAAOtB,OAASqB,EAAQrB,MAAQ,QAAU,WACtG,kBAAC,IAAD,CACEjB,GAAG,QACHgD,YAAY,mBACZ7H,KAAK,QACL8H,MAAOxB,EAAOR,MACdiC,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAOtB,OAASqB,EAAQrB,MAAQ,mBAAqB,eAGxDsB,EAAOtB,OAASqB,EAAQrB,OACvB,yBAAK2B,UAAU,kBAAkBL,EAAOtB,QAI5C,kBAAC,IAAK6B,KAAN,CAAWxB,UAAQ,EAACyD,MAAM,WAAWC,aAAW,EAACC,eAAgB1C,EAAOrB,UAAYoB,EAAQpB,SAAW,QAAU,WAC/G,kBAAC,IAAD,CACElB,GAAG,WACHgD,YAAY,sBACZ7H,KAAK,WACL8H,MAAOxB,EAAOP,SACdgC,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAOrB,UAAYoB,EAAQpB,SAAW,mBAAqB,eAG9DqB,EAAOrB,UAAYoB,EAAQpB,UAC1B,yBAAK0B,UAAU,kBAAkBL,EAAOrB,WAI5C,kBAAC,IAAK4B,KAAN,CAAWxB,UAAQ,EAACyD,MAAM,UAAUC,aAAW,GAC7C,kBAAC,IAAD,CACEhF,GAAG,kBACHgD,YAAY,6BACZ7H,KAAK,WACL8H,MAAOxB,EAAO6C,gBACdpB,SAAUT,EACVU,OAAQT,EACRE,UACEL,EAAO+B,iBAAmBhC,EAAQgC,gBAAkB,mBAAqB,eAG5E/B,EAAO+B,iBAAmBhC,EAAQgC,iBACjC,yBAAK1B,UAAU,kBAAkBL,EAAO+B,kBAI5C,kBAAC,IAAKxB,KAASmB,EACb,kBAAC,IAAD,CAAQ9D,QAASwC,EAAcxH,KAAK,UAAUwI,SAAUnB,GAAxD,iB,SC3LA0C,IAAKC,QACCD,IAAKE,UAeZC,MAbf,SAAkBvJ,GAChB,OACE,kBAAC,IAAD,CAAMwJ,KAAMxJ,EAAMwJ,MAClB,kBAAC,IAAKxC,KAAN,CAAWhD,IAAI,QACb,uBAAG/B,KAAK,KAAR,SAEF,kBAAC,IAAK+E,KAAN,CAAWhD,IAAI,YACb,uBAAG/B,KAAK,aAAR,eC+BSuC,mBAnCf,SAAmBxE,GACjB,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAYxC,OAAIA,EAAKwJ,WAAaxJ,EAAKwJ,SAASlJ,OAEhC,kBAAC,IAAD,CAAMiJ,KAAMxJ,EAAMwJ,MAChB,kBAAC,IAAKxC,KAAN,CAAWhD,IAAI,QACb,uBAAG/B,KAAK,UAAR,WAEF,kBAAC,IAAK+E,KAAN,CAAWhD,IAAI,OACb,uBAAG/B,KAAK,aAAR,YAMJ,kBAAC,IAAD,CAAMuH,KAAMxJ,EAAMwJ,MAChB,kBAAC,IAAKxC,KAAN,CAAWhD,IAAI,UACb,uBAAGK,QAzBW,WACpB9E,IAAMC,IAAN,UVXuB,aUWvB,YAAmCC,MAAK,SAAAC,GACd,MAApBA,EAASgK,OACX1J,EAAMS,QAAQC,KAAK,UAEnBqI,MAAM,uBAoBJ,e,gBCgBKY,MA9Cf,WAAmB,IAAD,EACcnH,oBAAS,GADvB,mBACToH,EADS,KACAC,EADA,KAWhB,OACE,yBAAK/C,UAAU,OAAOlG,MAAO,CAAEQ,SAAU,QAAS0I,OAAQ,EAAG3I,MAAO,SAClE,yBAAK2F,UAAU,cACb,uBAAG7E,KAAK,KAAR,SAEF,yBAAK6E,UAAU,mBACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAU0C,KAAK,gBAEjB,yBAAK1C,UAAU,cACb,kBAAC,EAAD,CAAW0C,KAAK,gBAElB,kBAAC,IAAD,CACE1C,UAAU,sBACVzH,KAAK,UACLgF,QAvBW,WACjBwF,GAAW,KAwBL,kBAAC,IAAD,CAAMxK,KAAK,iBAEb,kBAAC,IAAD,CACEoC,MAAM,eACNsI,UAAU,QACVjD,UAAU,cACVkD,UAAU,EACVC,QA5BQ,WACdJ,GAAW,IA4BLD,QAASA,GAET,kBAAC,EAAD,CAAUJ,KAAK,WACf,kBAAC,EAAD,CAAWA,KAAK,eC9BXU,MAZf,WACI,OACI,yBAAKtJ,MAAO,CACRI,OAAQ,OAAQmD,QAAS,OACzBgG,cAAe,SAAUC,WAAY,SACrChG,eAAgB,SAAU1C,SAAS,SAEpC,6CAAkB,kBAAC,IAAD,CAAMrC,KAAK,a,SCczBgL,MArBf,SAAmBrK,GAAQ,IAEjB6D,EAAU7D,EAAV6D,MAGR,OACE,kBAAC,IAAD,CAAcpC,MAAM,aAAa6I,UAAQ,GACrC,kBAAC,IAAatD,KAAd,CAAmBiC,MAAM,SAASpF,EAAMJ,gBACxC,kBAAC,IAAauD,KAAd,CAAmBiC,MAAM,gBAAgBpF,EAAM0G,cAC/C,kBAAC,IAAavD,KAAd,CAAmBiC,MAAM,WAAWpF,EAAM2G,SAC1C,kBAAC,IAAaxD,KAAd,CAAmBiC,MAAM,WAAWpF,EAAM4G,SAC1C,kBAAC,IAAazD,KAAd,CAAmBiC,MAAM,eAAejB,KAAM,GACzCnE,EAAM6G,cAEX,kBAAC,IAAa1D,KAAd,CAAmBiC,MAAM,cAAcpF,EAAM8G,YAC7C,kBAAC,IAAa3D,KAAd,CAAmBiC,MAAM,UAAUpF,EAAM6F,QACzC,kBAAC,IAAa1C,KAAd,CAAmBiC,MAAM,cAAcpF,EAAM+G,cCuEtCC,MArFf,SAAkB7K,GAGd,IAAMkC,EAAUlC,EAAMkC,QAChB4I,EAAW9K,EAAM8K,SACjBC,EAAa/K,EAAMgL,UAAUvJ,MAC7BwJ,EAAYjL,EAAMgL,UAAUxH,cAC5B0H,EAAelL,EAAMgL,UAAUP,QAPhB,EASuBjI,mBAAS,GAThC,mBASd2I,EATc,KASEC,EATF,OAUa5I,oBAAS,GAVtB,mBAUd6I,EAVc,KAUHC,EAVG,KAYjBC,EAAY,CACdT,SAAUA,EACV5I,QAASA,EACT6I,WAAYA,EACZE,UAAWA,EACXC,aAAcA,GA6DlB,OAzDE5K,qBAAU,WAINkL,IAAMzF,KAAK,+BAAgCwF,GACtC9L,MAAK,SAAAC,GACAA,EAASC,KAAKmJ,QACdsC,EAAkB1L,EAASC,KAAK8L,gBAEhC1C,MAAM,4GAMhByC,IAAMzF,KAAK,0BAA2BwF,GACnC9L,MAAK,SAAAC,GACEA,EAASC,KAAKmJ,QAChBwC,EAAa5L,EAASC,KAAK0L,WAEzBtC,MAAM,iGAIjB,IAkCH,6BACE,kBAAC,IAAD,CAAQ1E,QAhCc,WAEjBgH,EACCG,IAAMzF,KAAK,mCAAoCwF,GAC9C9L,MAAK,SAAAC,GACAA,EAASC,KAAKmJ,SAChBsC,EAAkBD,EAAiB,GACnCG,GAAcD,IAEZtC,MAAM,8GAMZyC,IAAMzF,KAAK,8BAA+BwF,GACzC9L,MAAK,SAAAC,GACAA,EAASC,KAAKmJ,SAChBsC,EAAkBD,EAAiB,GACnCG,GAAcD,IAEZtC,MAAM,sHAWlB,IAAqCsC,EAAW,eAAiB,kBAAjE,IAAqFF,EAArF,OC4BSO,MAzGf,SAAqB1L,GAEjB,IAAIkC,EAAUlC,EAAM2L,MAAMC,OAAO1J,QAFT,EAGEM,mBAAS,IAHX,mBAGjBqJ,EAHiB,KAGVC,EAHU,OAIEtJ,mBAAS,IAJX,mBAIjBuJ,EAJiB,KAIVC,EAJU,OAKcxJ,oBAAS,GALvB,mBAKjByJ,EALiB,KAKJC,EALI,KAoC1B,OA7BE5L,qBAAU,WAEN6C,QAAQC,IAAIpD,EAAM2L,OAGlB,IAAIQ,EAAa,UAAMlN,EAAN,iBAAsBiD,EAAtB,4BAAiDhD,GAC9DkN,EAAY,UAAMnN,EAAN,iBAAsBiD,EAAtB,oBAAyChD,GAEzD+D,MAAMmJ,GACD3M,MAAK,SAAAC,GAAQ,OAAIA,EAASwD,UAC1BzD,MAAK,SAAAC,GACFoM,EAASpM,GACTyD,QAAQC,IAAI,WAAY1D,MAGhCuD,MAAMkJ,GACD1M,MAAK,SAAAC,GAAQ,OAAIA,EAASwD,UAC1BzD,MAAK,SAAAC,GACFsM,EAAStM,EAAS2M,MAClBlJ,QAAQC,IAAI1D,EAAS2M,WAG9B,IAQH,6BAGCR,EAAMrI,eACP,kBAAC,EAAD,CACI1C,MAAK,UAAK3B,EAAL,gBAA2B0M,EAAMrI,eACtC/B,MAAOoK,EAAMpI,eACb9B,KAAMkK,EAAMnI,WAOhB,yBAAK9C,MAAO,CAAEO,MAAO,MAAOoC,OAAQ,cAEhC,yBAAK3C,MAAO,CAAEuD,QAAQ,OAAQC,eAAgB,aAC1C,kBAAC,EAAD,CAAW4G,UAAWa,EAAO3J,QAASA,EAAS4I,SAAUpG,aAAaC,QAAQ,aAQlF,kBAAC,EAAD,CACId,MAAOgI,IAKX,6BAKA,yBAAKjL,MAAO,CAAEuD,QAAS,OAAQC,eAAgB,SAAUb,OAAQ,SAC7D,4BAAQc,QA3CQ,WACpB6H,GAAgBD,KA0CZ,wBAGHA,GACG,kBAAC,IAAD,CAAKtI,OAAQ,CAAC,GAAI,KAEboI,GAASA,EAAMnI,KAAI,SAACyI,EAAMvI,GAAP,OAChB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACjB,kBAAC,EAAD,CACIhD,MAAOuL,EAAKC,aAAL,UACAnN,EADA,eACqBkN,EAAKC,cAAiB,KAClDC,cAAeF,EAAK9D,e,kBCIjCiE,MA1Ff,WAAyB,IAAD,EAEchK,mBAAS,IAFvB,mBAEbiK,EAFa,KAEFC,EAFE,KAKpBpM,qBAAU,WACNqM,MACD,IAIP,IAAMA,EAAoB,WACtBnB,IAAMzF,KAAK,iCAAkC,CAAE+E,SAAUpG,aAAaC,QAAQ,YACrElF,MAAK,SAAAC,GACEA,EAASC,KAAKmJ,SACd3F,QAAQC,IAAI1D,EAASC,KAAKiN,WAC1BF,EAAahN,EAASC,KAAKiN,YAE3B7D,MAAM,4GAwBpB8D,EAAcJ,EAAU7I,KAAI,SAACkJ,EAAUhJ,GAEzC,IAAMiJ,EACF,6BACKD,EAAS7B,UAEN,yBAAK9I,IAAG,UAAKhD,EAAL,eAA0B2N,EAAS7B,aAAkB,YAQzE,OAAO,wBAAIjH,IAAOF,GAEN,kBAAC,IAAD,CAASiJ,QAASA,EAAStL,MAAK,UAAKqL,EAASrL,QAC1C,4BAAKqL,EAASrL,QAGlB,4BAAKqL,EAAS5B,aAAd,SACA,4BAAI,kBAAC,IAAD,CAAQ7G,QAAS,kBAvCf,SAACnC,EAAS4I,GAE5B,IAAMS,EAAY,CACdrJ,UACA4I,YAGJU,IAAMzF,KAAK,mCAAoCwF,GAC9C9L,MAAK,SAAAC,GACEA,EAASC,KAAKmJ,QACd6D,IAEA5D,MAAM,oGA2ByBiE,CAAcF,EAAS5K,QAAS4K,EAAShC,YAAhE,UAAJ,SAMd,OACE,yBAAKlK,MAAO,CAAEO,MAAO,MAAOoC,OAAO,cAC/B,iDACA,6BAEA,+BACI,+BACI,4BACI,2CACA,6CACA,sDAGR,+BACKsJ,MCxDFI,MAlBf,WACE,OACE,kBAAC,WAAD,CAAUC,SAAW,4CACnB,kBAAC,EAAD,MACA,yBAAKtM,MAAO,CAAEuM,WAAY,OAAQC,UAAW,uBAC3C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,EAAKjL,EAAa,QACnD,kBAAC,IAAD,CAAO8K,OAAK,EAACC,KAAK,SAASC,UAAWC,EAAKC,GAAW,KACtD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKnF,GAAc,KAC5D,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,kBAAkBC,UAAWC,EAAK9B,EAAa,QACjE,kBAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,YAAYC,UAAWC,EAAKhB,GAAc,OAGhE,kBAAC,EAAD,QCjBckB,QACW,cAA7BxH,OAAOyH,SAASC,UAEe,UAA7B1H,OAAOyH,SAASC,UAEhB1H,OAAOyH,SAASC,SAASjC,MACvB,2D,+BCXSkC,GAJKC,YAAgB,CAChC7N,KCIW,WAA0B,IAAjBE,EAAgB,uDAAV,GAAG4N,EAAO,uCACpC,OAAOA,EAAO1O,MACV,IlBTqB,gBkBUjB,OAAO,eAAIc,EAAX,CAAkB6N,SAAUD,EAAOzO,UACvC,IlBZkB,akBad,OAAO,eAAKa,EAAZ,CAAmB8N,YAAaF,EAAOzO,UAC3C,IlBZiB,YkBab,OAAO,eAAIa,EAAX,CAAkBsJ,SAAUsE,EAAOzO,UACvC,IlBbmB,ckBcf,OAAO,eAAIa,GACf,QACI,OAAOA,M,+BCFb+N,GAA4BC,YAAgBC,KAAmBC,KAAnCF,CAA+CG,KAEjFC,IAASC,OACL,kBAAC,IAAD,CACIC,MAAOP,GACHQ,GACAxI,OAAOyI,8BACPzI,OAAOyI,iCAGX,kBAAC,IAAD,KACI,kBAAC,EAAD,QAGNC,SAASC,eAAe,SHkGxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvP,MAAK,SAAAwP,GACjCA,EAAaC,kB","file":"static/js/main.cd2d5616.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'eaf51a83dcaa7450f38cf8cb4f5e6183';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react';\r\n\r\nfunction MainImage(props) {\r\n    const gradient = \"linear-gradient(to bottom, rgba(0,0,0,0) 39%, rgba(0,0,0,0) 41%, rgba(0,0,0,0.65) 100%)\";\r\n\r\n    return(\r\n    <div style={{ \r\n        backgroundImage: `${gradient}, url('${props.image}')`,\r\n        backgroundColor: '#1c1c1c',\r\n        height: '500px',\r\n        backgroundSize: '100%, cover',\r\n        backgroundPosition: 'center, top',\r\n        width: '100%',\r\n        position: 'relative'\r\n    }}>\r\n        <div>\r\n            <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem'}}>\r\n                <h2 style={{ color: 'white' }}> {props.title} </h2>\r\n                <p style={{ color: 'white', fontSize: '1rem'}}> {props.text} </p>\r\n\r\n            </div>\r\n        </div>\r\n</div>        \r\n    )\r\n}\r\n\r\n\r\nexport default MainImage","import React from 'react'\r\nimport { Col } from 'antd'\r\n\r\nfunction GridCards(props) {\r\n\r\n    if (props.landingPage) {\r\n        return (\r\n            <Col lg={4} md={8} xs={24}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <a href={`/movie/${props.movieId}`}>\r\n                        <img style={{ width:'100%', height:'320px' }} src={props.image} alt={props.movieName} />\r\n                    </a>\r\n                </div>\r\n            </Col>\r\n        )\r\n    } else {\r\n        return (\r\n            <Col lg={4} md={8} xs={24}>\r\n                <div style={{ position: 'relative' }}>\r\n                    <img style={{ width:'100%', height:'320px' }} src={props.image} alt={props.characterName} />\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default GridCards","import React, { useEffect, useState } from 'react'\n//import { FaCode } from \"react-icons/fa\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from './Sections/MainImage';\nimport axios from 'axios';\nimport GridCards from '../commons/GridCards';\nimport { Row } from 'antd';\n\nfunction LandingPage() {\n\n\n    const [Movies, setMovies] = useState([])\n    const [MainMovieImage, setMainMovieImage] = useState(null)\n    const [CurrentPage, setCurrentPage] = useState(0)\n    \n    useEffect(() => {\n            const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n            fetchMovies(endpoint)\n    }, [])\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n        .then(response => response.json())\n        .then(response => {\n            console.log(response)\n            setMovies([...Movies, ...response.results])\n            setMainMovieImage(response.results[0])\n            setCurrentPage(response.page)\n        })\n    }\n\n    const loadMoreItems = () => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;\n        fetchMovies(endpoint)\n\n    }\n\n    \n    return (\n        <div style={{ width: '100%', margin:'0'}}>\n\n            {/* Main Image */}\n            {MainMovieImage && \n                <MainImage \n                    image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`} \n                    title={MainMovieImage.original_title}\n                    text={MainMovieImage.overview}\n                />\n            }\n\n            <div style={{ width:'85%', margin:'1rem auto' }}>\n                \n                <h2>Movies by latest</h2>\n                <hr />\n\n                {/* Movie Grid Cards */}\n                <Row gutter={[16, 16]}>\n                    \n                    {Movies && Movies.map((movie, index) =>(\n                        <React.Fragment key={index}>\n                            <GridCards \n                                landingPage\n                                image={movie.poster_path ? \n                                    `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}\n                                movieId={movie.id}\n                                movieName={movie.original_title}\n                            />\n\n                        </React.Fragment>\n\n                    ))}\n                    \n\n\n                </Row>\n                \n\n\n\n\n            </div>\n\n\n        <div style={{ display: 'flex', justifyContent:'center' }}>\n            <button onClick={loadMoreItems}>Load More</button>\n        </div>\n\n        </div>\n    )\n}\n\nexport default LandingPage\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          //dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          //handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          //dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          //handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <Menu.Item key=\"favorite\">\n      <a href=\"/favorite\">Favorite</a>\n    </Menu.Item>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import { Descriptions } from 'antd'\r\nimport React from 'react'\r\n\r\nfunction MovieInfo(props) {\r\n\r\n    let { movie } = props;\r\n\r\n\r\n  return (\r\n    <Descriptions title=\"Movie Info\" bordered>\r\n        <Descriptions.Item label=\"Title\">{movie.original_title}</Descriptions.Item>\r\n        <Descriptions.Item label=\"release_date\">{movie.release_date}</Descriptions.Item>\r\n        <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\r\n        <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Vote_average\" span={2}>\r\n            {movie.Vote_average}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"vote_count\">{movie.vote_count}</Descriptions.Item>\r\n        <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\r\n        <Descriptions.Item label=\"popularity\">{movie.popularity}</Descriptions.Item>\r\n    </Descriptions>\r\n  )\r\n}\r\n\r\nexport default MovieInfo\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button } from 'antd'\r\n\r\n\r\nfunction Favorite(props) {\r\n\r\n\r\n    const movieId = props.movieId\r\n    const userFrom = props.userFrom\r\n    const movieTitle = props.movieInfo.title\r\n    const moviePost = props.movieInfo.backdrop_path\r\n    const movieRunTime = props.movieInfo.runtime\r\n\r\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\r\n    const [Favorited, setFavorited] = useState(false)\r\n\r\n    let variables = {\r\n      userFrom: userFrom,\r\n      movieId: movieId,\r\n      movieTitle: movieTitle, \r\n      moviePost: moviePost,\r\n      movieRunTime: movieRunTime\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n      \r\n\r\n        Axios.post('/api/favorite/favoriteNumber', variables)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                  setFavoriteNumber(response.data.favoriteNumber)\r\n              } else {\r\n                  alert('숫자 정보를 가져오는데 실패 했습니다.')\r\n              }\r\n            })\r\n\r\n\r\n\r\n        Axios.post('/api/favorite/favorited', variables)\r\n          .then(response => {\r\n              if (response.data.success) {\r\n                setFavorited(response.data.Favorited)\r\n              } else {\r\n                  alert('정보를 가져오는데 실패 했습니다.')\r\n              }\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n    const onClickFavorite = () => {\r\n      \r\n        if(Favorited) {\r\n            Axios.post('/api/favorite/removeFromFavorite', variables)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                setFavoriteNumber(FavoriteNumber - 1)\r\n                setFavorited(!Favorited)\r\n              } else {\r\n                  alert(\"Favorite 리스트에서 지우는 걸 실패했습니다.\")\r\n              }\r\n            })\r\n\r\n\r\n        } else {\r\n            Axios.post('/api/favorite/addToFavorite', variables)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                setFavoriteNumber(FavoriteNumber + 1)\r\n                setFavorited(!Favorited)\r\n              } else {\r\n                  alert(\"Favorite 리스트에서 추가하는 걸 실패했습니다.\")\r\n              }\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={onClickFavorite}> { Favorited? \"Not Favorite\" : \"Add to Favorite\"} {FavoriteNumber} </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Favorite\r\n","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\r\nimport MainImage from '../LandingPage/Sections/MainImage';\r\nimport MovieInfo from './Sections/MovieInfo';\r\nimport GridCards from '../commons/GridCards';\r\nimport { Row } from 'antd';\r\nimport Favorite from './Sections/Favorite';\r\n\r\nfunction MovieDetail(props) {\r\n\r\n    let movieId = props.match.params.movieId\r\n    const [Movie, setMovie] = useState([])\r\n    const [Casts, setCasts] = useState([])\r\n    const [ActorToggle, setActorToggle] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(props.match)\r\n        \r\n\r\n        let endpointCrews = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n        let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n\r\n        fetch(endpointInfo)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setMovie(response)\r\n                console.log(\"response\", response)\r\n            })\r\n\r\n        fetch(endpointCrews)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setCasts(response.cast)\r\n                console.log(response.cast)\r\n            }) \r\n\r\n    }, [])\r\n\r\n    const toggleActorView = () => {\r\n        setActorToggle(!ActorToggle)\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n    {/* Header */}\r\n    {Movie.backdrop_path && (\r\n    <MainImage \r\n        image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`} \r\n        title={Movie.original_title}\r\n        text={Movie.overview}\r\n    \r\n    />\r\n    )}\r\n\r\n\r\n    {/* Body */}\r\n    <div style={{ width: '85%', margin: '1rem auto' }}>\r\n\r\n        <div style={{ display:'flex', justifyContent: 'flex-end' }}>\r\n            <Favorite  movieInfo={Movie} movieId={movieId} userFrom={localStorage.getItem('userId')} />\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {/* Movie Info */}\r\n\r\n        <MovieInfo \r\n            movie={Movie}\r\n\r\n        />\r\n\r\n\r\n        <br />\r\n\r\n        {/* Actors Grid */}\r\n\r\n\r\n        <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\r\n            <button onClick={toggleActorView}> Toggle Actor View </button>\r\n        </div>\r\n\r\n        {ActorToggle && \r\n            <Row gutter={[16, 16]}>\r\n                    \r\n                {Casts && Casts.map((cast, index) =>(\r\n                    <React.Fragment key={index}>\r\n                        <GridCards \r\n                            image={cast.profile_path ? \r\n                                `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}\r\n                            CharacterName={cast.name}\r\n                        />\r\n\r\n                    </React.Fragment>\r\n\r\n                ))}\r\n                \r\n\r\n\r\n            </Row>\r\n        }\r\n        \r\n\r\n\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieDetail\r\n","import React, { useState } from 'react'\r\nimport './Favorite.css';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { Popover, Button } from 'antd';\r\nimport { IMAGE_BASE_URL } from '../../Config';\r\n\r\nfunction FavoritePage() {\r\n\r\n    const [Favorites, setFavorites] = useState([])\r\n\r\n\r\n    useEffect(()=> {\r\n        fetchFavoredMovie ()\r\n    }, [])\r\n\r\n\r\n\r\nconst fetchFavoredMovie = () => {\r\n    Axios.post('/api/favorite/getFavoriteMovie', { userFrom: localStorage.getItem('userId') })\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.favorites)\r\n                    setFavorites(response.data.favorites)\r\n                }else {\r\n                    alert(\"영화 정보를 가져오는데 실패했습니다.\")\r\n                }\r\n            })\r\n}\r\n\r\n\r\nconst onClickDelete = (movieId, userFrom) => {\r\n\r\n    const variables = {\r\n        movieId,\r\n        userFrom\r\n    }\r\n\r\n    Axios.post('/api/favorite/removeFromFavorite', variables)\r\n    .then(response => {\r\n        if (response.data.success) {\r\n            fetchFavoredMovie()\r\n        } else {\r\n            alert(\"리스트에서 지우는데 실패했습니다.\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\nconst renderCards = Favorites.map((favorite, index) => {\r\n\r\n    const content = (\r\n        <div>\r\n            {favorite.moviePost ?\r\n\r\n                <img src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`} /> : \"no image\"}\r\n\r\n            \r\n\r\n        </div>\r\n    )\r\n\r\n\r\n    return <tr key = {index}>\r\n    \r\n                <Popover content={content} title={`${favorite.title}`}>\r\n                    <td>{favorite.title}</td>\r\n                </Popover>\r\n\r\n                <td>{favorite.movieRunTime} mins</td>\r\n                <td><Button onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}>Remove</Button> </td>\r\n\r\n            </tr>\r\n})\r\n\r\n\r\n  return (\r\n    <div style={{ width: '85%', margin:'3rem auto' }}>\r\n        <h2> Favorite Movies </h2>\r\n        <hr />\r\n\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Movie Title</th>\r\n                    <th>Movie RunTime</th>\r\n                    <th>Remove from favorite</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {renderCards}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FavoritePage\r\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\nimport MovieDetail from './views/MovieDetail/MovieDetail.js';\nimport FavoritePage from './views/FavoritePage/FavoritePage.js';\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}